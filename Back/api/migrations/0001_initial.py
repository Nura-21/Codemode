# Generated by Django 4.0.4 on 2022-05-01 05:18

from ..managers import UserManager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodemodeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=300)),
                ('last_name', models.CharField(max_length=300)),
                ('nickname', models.CharField(max_length=300, unique=True)),
                ('password', models.CharField(max_length=300)),
                ('phone', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=300)),
                ('checkk', models.BooleanField(default=False)),
                ('image_url', models.URLField(max_length=301)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(max_length=300)),
                ('price', models.IntegerField(default=0)),
                ('info', models.TextField(max_length=300)),
                ('url', models.URLField(default='', max_length=300)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='CourseTutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=300)),
                ('time', models.CharField(max_length=300)),
                ('amount', models.IntegerField(default=0)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.course')),
            ],
            options={
                'verbose_name': 'Course-Tutor',
                'verbose_name_plural': 'Courses-Tutors',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(default='', max_length=300)),
                ('name', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=300)),
                ('info', models.TextField(max_length=1024)),
                ('image_url', models.URLField(blank=True, default='', max_length=300)),
            ],
            options={
                'verbose_name': 'Tutor',
                'verbose_name_plural': 'Tutors',
            },
        ),
        migrations.CreateModel(
            name='TutorPhoneNumbers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='api.tutor')),
            ],
            options={
                'verbose_name': 'Phone number of some tutor',
                'verbose_name_plural': 'Phone numbers of some tutors',
            },
        ),
        migrations.CreateModel(
            name='StudentPhoneNumbers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student and his phone number',
                'verbose_name_plural': 'Students and their phone numbers',
            },
        ),
        migrations.CreateModel(
            name='StudentCourseTutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('course_tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.coursetutor')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student and Course-Tutors',
                'verbose_name_plural': 'Student and Course-Tutors',
            },
        ),
        migrations.CreateModel(
            name='StudentCourseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=512)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Student's course comment",
                'verbose_name_plural': "Students' course comments",
            },
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('type', models.BooleanField(default=False)),
                ('message', models.TextField(max_length=300)),
                ('status', models.CharField(max_length=300)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Money',
                'verbose_name_plural': 'Money',
            },
        ),
        migrations.AddField(
            model_name='coursetutor',
            name='students',
            field=models.ManyToManyField(related_name='courses', through='api.StudentCourseTutor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coursetutor',
            name='tutor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.tutor'),
        ),
        migrations.AddField(
            model_name='course',
            name='commented_by',
            field=models.ManyToManyField(through='api.StudentCourseComment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='tutors',
            field=models.ManyToManyField(related_name='courses', through='api.CourseTutor', to='api.tutor'),
        ),
    ]
